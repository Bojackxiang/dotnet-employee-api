{
  "info": {
    "_postman_id": "employee-api-tests",
    "name": "Employee Management API",
    "description": "Complete test collection for Employee Management API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "employee-api-collection"
  },
  "item": [
    {
      "name": "Employee API",
      "item": [
        {
          "name": "1. Get All Employees",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Response has data field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});",
                  "",
                  "pm.test(\"Response has message field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.eql('成功获取所有员工信息');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee"]
            },
            "description": "获取所有员工列表"
          },
          "response": []
        },
        {
          "name": "2. Create Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Response has employee ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.globals.set('employeeId', jsonData.data.id);",
                  "});",
                  "",
                  "pm.test(\"Response message is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql('员工创建成功');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"王五\",\n    \"email\": \"wangwu@example.com\",\n    \"department\": \"技术部\",\n    \"hireDate\": \"2024-01-15T00:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/employee",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee"]
            },
            "description": "创建新员工"
          },
          "response": []
        },
        {
          "name": "3. Get Employee by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has employee data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "});",
                  "",
                  "pm.test(\"Response message is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql('成功获取员工信息');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "{{employeeId}}"]
            },
            "description": "根据ID获取特定员工信息"
          },
          "response": []
        },
        {
          "name": "4. Update Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Response message is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql('员工信息更新成功');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"王五 - 更新\",\n    \"email\": \"wangwu.updated@example.com\",\n    \"department\": \"产品部\",\n    \"hireDate\": \"2024-01-15T00:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/employee/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "{{employeeId}}"]
            },
            "description": "更新员工信息"
          },
          "response": []
        },
        {
          "name": "5. Delete Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Response message is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql('员工删除成功');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "{{employeeId}}"]
            },
            "description": "删除员工"
          },
          "response": []
        }
      ],
      "description": "Employee Management API 的完整 CRUD 操作测试"
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Get Non-existent Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(false);",
                  "    pm.expect(jsonData.message).to.eql('员工不存在');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "99999"]
            },
            "description": "测试获取不存在的员工"
          },
          "response": []
        },
        {
          "name": "Create Employee with Invalid Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response has validation error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(false);",
                  "    pm.expect(jsonData.message).to.eql('员工信息验证失败');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"\",\n    \"email\": \"invalid-email\",\n    \"department\": \"技术部\",\n    \"hireDate\": \"2024-01-15T00:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/employee",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee"]
            },
            "description": "测试创建员工时的数据验证"
          },
          "response": []
        },
        {
          "name": "Update Non-existent Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(false);",
                  "    pm.expect(jsonData.message).to.eql('员工不存在');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"测试员工\",\n    \"email\": \"test@example.com\",\n    \"department\": \"测试部\",\n    \"hireDate\": \"2024-01-15T00:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/employee/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "99999"]
            },
            "description": "测试更新不存在的员工"
          },
          "response": []
        },
        {
          "name": "Delete Non-existent Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.eql(false);",
                  "    pm.expect(jsonData.message).to.eql('员工不存在或删除失败');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "99999"]
            },
            "description": "测试删除不存在的员工"
          },
          "response": []
        }
      ],
      "description": "错误场景测试，包含各种边界情况和异常处理"
    },
    {
      "name": "Seed Data Tests",
      "item": [
        {
          "name": "Get Seed Employee 1 (张三)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Employee name is 张三\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.name).to.eql('张三');",
                  "    pm.expect(jsonData.data.email).to.eql('zhangsan@example.com');",
                  "    pm.expect(jsonData.data.department).to.eql('IT部门');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "1"]
            },
            "description": "测试种子数据 - 张三"
          },
          "response": []
        },
        {
          "name": "Get Seed Employee 2 (李四)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Employee name is 李四\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.name).to.eql('李四');",
                  "    pm.expect(jsonData.data.email).to.eql('lisi@example.com');",
                  "    pm.expect(jsonData.data.department).to.eql('人事部门');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/employee/2",
              "host": ["{{baseUrl}}"],
              "path": ["api", "employee", "2"]
            },
            "description": "测试种子数据 - 李四"
          },
          "response": []
        }
      ],
      "description": "测试数据库中的种子数据"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "employeeId",
      "value": "",
      "type": "string"
    }
  ]
}
